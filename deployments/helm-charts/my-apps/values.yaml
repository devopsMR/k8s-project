namespace:
  name: k8s-project

resourceQuota:
  name: quota
  hard:
    pods: "10"
    requests:
      cpu: "6"
      memory: "20Gi"
    limits:
      cpu: "12"
      memory: "40Gi"

config:
  rabbitmq:
    host: myhelm-rabbitmq
    port: "5672"
    queue: pc
    messageRepeat: "0" # Only used by the producer
    prometheusPort: "9422" # Only used by the consumer

producer:
  replicas: 1
  image:
    repository: devopsmichaelrosenbaum/producer
    tag: "9"
    pullPolicy: Always
  resources:
    requests:
      cpu: "250m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

consumer:
  replicas: 1
  image:
    repository: devopsmichaelrosenbaum/consumer
    tag: "9"
    pullPolicy: Always
  resources:
    requests:
      cpu: "250m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  metricsService:
    name: consumer-metrics-service
    port: 9422
    nodePort: 30007

rabbitmq:
  auth:
    username: rabbitusername
    existingPasswordSecret: rabbitmq-secret
    existingSecretPasswordKey: RABBITMQ_PASSWORD

  global:
    namespaceOverride: k8s-project

  persistence:
    enabled: true
    storageClass: ""  # Avoids dynamic provisioning
    size: 5Gi

  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "1Gi"

  service:
    type: NodePort
    nodePorts:
      amqp: 30009   # RabbitMQ AMQP (5672)
      manager: 30008 # RabbitMQ Management UI (15672)

extraManifests:
  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: rabbitmq-pv
      namespace: k8s-project
    spec:
      capacity:
        storage: 5Gi
      accessModes:
        - ReadWriteOnce
      persistentVolumeReclaimPolicy: Retain
      hostPath:
        path: /mnt/data/rabbitmq
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: rabbitmq-pvc
      namespace: k8s-project
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
